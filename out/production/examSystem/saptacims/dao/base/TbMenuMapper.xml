<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="saptacims.dao.base.TbMenuMapper" >
  <resultMap id="BaseResultMap" type="saptacims.model.TbMenu" >
    <id column="MENU_ID" property="menuId" jdbcType="INTEGER" />
    <result column="MENU_NAME" property="menuName" jdbcType="VARCHAR" />
    <result column="MENU_URL" property="menuUrl" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="MENU_PARENTID" property="menuParentid" jdbcType="INTEGER" />
    <result column="MENU_LEVEL" property="menuLevel" jdbcType="INTEGER" />
    <result column="SORT" property="sort" jdbcType="INTEGER" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    MENU_ID, MENU_NAME, MENU_URL, CREATE_TIME, CREATE_USER, MENU_PARENTID, MENU_LEVEL, 
    SORT, STATUS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="saptacims.model.TbMenuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_MENU
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from TB_MENU
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from TB_MENU
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="saptacims.model.TbMenuExample" >
    delete from TB_MENU
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="saptacims.model.TbMenu" >
    insert into TB_MENU (MENU_ID, MENU_NAME, MENU_URL, 
      CREATE_TIME, CREATE_USER, MENU_PARENTID, 
      MENU_LEVEL, SORT, STATUS
      )
    values (#{menuId,jdbcType=INTEGER}, #{menuName,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{menuParentid,jdbcType=INTEGER}, 
      #{menuLevel,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="saptacims.model.TbMenu" >
    insert into TB_MENU
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        MENU_ID,
      </if>
      <if test="menuName != null" >
        MENU_NAME,
      </if>
      <if test="menuUrl != null" >
        MENU_URL,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="menuParentid != null" >
        MENU_PARENTID,
      </if>
      <if test="menuLevel != null" >
        MENU_LEVEL,
      </if>
      <if test="sort != null" >
        SORT,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="menuParentid != null" >
        #{menuParentid,jdbcType=INTEGER},
      </if>
      <if test="menuLevel != null" >
        #{menuLevel,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="saptacims.model.TbMenuExample" resultType="java.lang.Integer" >
    select count(*) from TB_MENU
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update TB_MENU
    <set >
      <if test="record.menuId != null" >
        MENU_ID = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.menuName != null" >
        MENU_NAME = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuUrl != null" >
        MENU_URL = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.menuParentid != null" >
        MENU_PARENTID = #{record.menuParentid,jdbcType=INTEGER},
      </if>
      <if test="record.menuLevel != null" >
        MENU_LEVEL = #{record.menuLevel,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        SORT = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TB_MENU
    set MENU_ID = #{record.menuId,jdbcType=INTEGER},
      MENU_NAME = #{record.menuName,jdbcType=VARCHAR},
      MENU_URL = #{record.menuUrl,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      MENU_PARENTID = #{record.menuParentid,jdbcType=INTEGER},
      MENU_LEVEL = #{record.menuLevel,jdbcType=INTEGER},
      SORT = #{record.sort,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="saptacims.model.TbMenu" >
    update TB_MENU
    <set >
      <if test="menuName != null" >
        MENU_NAME = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        MENU_URL = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="menuParentid != null" >
        MENU_PARENTID = #{menuParentid,jdbcType=INTEGER},
      </if>
      <if test="menuLevel != null" >
        MENU_LEVEL = #{menuLevel,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        SORT = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="saptacims.model.TbMenu" >
    update TB_MENU
    set MENU_NAME = #{menuName,jdbcType=VARCHAR},
      MENU_URL = #{menuUrl,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      MENU_PARENTID = #{menuParentid,jdbcType=INTEGER},
      MENU_LEVEL = #{menuLevel,jdbcType=INTEGER},
      SORT = #{sort,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=INTEGER}
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </update>
  
  <select id="getMenuByUserId" parameterType="INTEGER" resultMap="BaseResultMap">
    		select * from TB_MENU where MENU_ID in 
    			(select MENU_PARENTID from TB_MENU where MENU_ID in 
    				(
    					select MENU_ID from TB_ROLE_MENU where ROLE_ID in (select br.ROLE_ID from TB_USER_ROLE bru,TB_ROLE br where br.ROLE_ID = bru.ROLE_ID and bru.USER_ID = #{userId,jdbcType=INTEGER} and bru.ROLE_ID = br.ROLE_ID )
    				)
    			) order by MENU_PARENTID,SORT
    </select>
    
    
    <select id="getSecondMenuByUserId" resultMap="BaseResultMap">
    	select * from TB_MENU where 1 = 1  and MENU_PARENTID = #{menuId,jdbcType=INTEGER} and MENU_ID in 
   			(
    				select MENU_ID from TB_ROLE_MENU where ROLE_ID in (select br.ROLE_ID from TB_USER_ROLE bru,TB_ROLE br where br.ROLE_ID = bru.ROLE_ID and bru.USER_ID = #{userId} )
    			) order by MENU_PARENTID,SORT
     </select>
</mapper>