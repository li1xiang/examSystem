<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="saptacims.dao.base.TbRoleMapper" >
  <resultMap id="BaseResultMap" type="saptacims.model.TbRole" >
    <id column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="RoleUserMap" type="saptacims.vo.page.RoleListVO" >
    <id column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="INTEGER" />
    <result column="ROLE_USER" property="roleUser" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ROLE_ID, ROLE_NAME, CREATE_TIME, CREATE_USER, UPDATE_TIME, UPDATE_USER
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="saptacims.model.TbRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from TB_ROLE
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from TB_ROLE
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="saptacims.model.TbRoleExample" >
    delete from TB_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="saptacims.model.TbRole"
     keyColumn="ROLE_ID" useGeneratedKeys="true" keyProperty="roleId">
    insert into TB_ROLE (ROLE_NAME, CREATE_TIME, 
      CREATE_USER, UPDATE_TIME, UPDATE_USER
      )
    values ( #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="saptacims.model.TbRole"  keyColumn="ROLE_ID" useGeneratedKeys="true" keyProperty="roleId">
    insert into TB_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="saptacims.model.TbRoleExample" resultType="java.lang.Integer" >
    select count(*) from TB_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update TB_ROLE
    <set >
      <if test="record.roleName != null" >
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TB_ROLE
    set 
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="saptacims.model.TbRole" >
    update TB_ROLE
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="saptacims.model.TbRole" >
    update TB_ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER}
    where ROLE_ID = #{roleId,jdbcType=INTEGER}
  </update>
  <select id="getPageList" resultMap="RoleUserMap">
  		select tr.*,
  		(select group_concat(tu.USER_CNAME) from TB_USER as tu,TB_USER_ROLE as tur where tu.USER_ID = tur.USER_ID and tr.ROLE_ID =tur.ROLE_ID) as ROLE_USER 
  		from TB_ROLE as tr where 1=1 
        <if test="roleName != null"> and tr.ROLE_NAME like '%${roleName}%' </if>  
            order by ${sort} ${order} 
       	 	limit ${pageOffset},${pageSize}
    </select>
    <select id="getPageCount" parameterType="map" resultType="int">
        select count(*) from (select tr.*,
  		(select group_concat(tu.USER_CNAME) from TB_USER as tu,TB_USER_ROLE as tur where tu.USER_ID = tur.USER_ID and tr.ROLE_ID =tur.ROLE_ID) as ROLE_USER 
  		from TB_ROLE as tr where 1=1 
        <if test="userCname != null"> and tr.ROLE_NAME like '%${roleName}%' </if>
        ) as roleList  
    </select>

  <select id="selectroleName" parameterType="String" resultType="int">
    select count(*) from  tb_role  where role_name = #{rolename,jdbcType=VARCHAR}
  </select>
</mapper>