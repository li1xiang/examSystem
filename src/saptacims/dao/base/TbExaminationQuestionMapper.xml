<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="saptacims.dao.base.TbExaminationQuestionMapper">
  <resultMap id="BaseResultMap" type="saptacims.model.TbExaminationQuestion">
    <id column="EXAMINATION_QUESTION_ID" jdbcType="INTEGER" property="examinationQuestionId" />
    <result column="QUESTION_ID" jdbcType="INTEGER" property="questionId" />
    <result column="EXAMINATION_ID" jdbcType="INTEGER" property="examinationId" />
    <result column="CATEGORY_ID" jdbcType="INTEGER" property="categoryId" />
    <result column="GROUP_ID" jdbcType="INTEGER" property="groupId" />
    <result column="LEVELS" jdbcType="INTEGER" property="levels" />
    <result column="QUESTION_TITLE" jdbcType="VARCHAR" property="questionTitle" />
    <result column="QUESTION_TYPE" jdbcType="INTEGER" property="questionType" />
    <result column="QUESTION_IMG_PATH" jdbcType="VARCHAR" property="questionImgPath" />
    <result column="QUESTION_IMG_NAME" jdbcType="VARCHAR" property="questionImgName" />
    <result column="TOTAL_SCORE" jdbcType="INTEGER" property="totalScore" />
    <result column="CREATE_USER" jdbcType="INTEGER" property="createUser" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_USER" jdbcType="INTEGER" property="updateUser" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EXAMINATION_QUESTION_ID, QUESTION_ID, EXAMINATION_ID, CATEGORY_ID, GROUP_ID, LEVELS, 
    QUESTION_TITLE, QUESTION_TYPE, QUESTION_IMG_PATH, QUESTION_IMG_NAME, TOTAL_SCORE, 
    CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="saptacims.model.TbExaminationQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TB_EXAMINATION_QUESTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from TB_EXAMINATION_QUESTION
    where EXAMINATION_QUESTION_ID = #{examinationQuestionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from TB_EXAMINATION_QUESTION
    where EXAMINATION_QUESTION_ID = #{examinationQuestionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="saptacims.model.TbExaminationQuestionExample">
    delete from TB_EXAMINATION_QUESTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="saptacims.model.TbExaminationQuestion">
    insert into TB_EXAMINATION_QUESTION (EXAMINATION_QUESTION_ID, QUESTION_ID, 
      EXAMINATION_ID, CATEGORY_ID, GROUP_ID, 
      LEVELS, QUESTION_TITLE, QUESTION_TYPE, 
      QUESTION_IMG_PATH, QUESTION_IMG_NAME, TOTAL_SCORE, 
      CREATE_USER, CREATE_TIME, UPDATE_USER, 
      UPDATE_TIME)
    values (#{examinationQuestionId,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, 
      #{examinationId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{levels,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, #{questionType,jdbcType=INTEGER}, 
      #{questionImgPath,jdbcType=VARCHAR}, #{questionImgName,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="saptacims.model.TbExaminationQuestion" keyColumn="EXAMINATION_QUESTION_ID" useGeneratedKeys="true" keyProperty="examinationQuestionId">
    insert into TB_EXAMINATION_QUESTION
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        QUESTION_ID,
      </if>
      <if test="examinationId != null">
        EXAMINATION_ID,
      </if>
      <if test="categoryId != null">
        CATEGORY_ID,
      </if>
      <if test="groupId != null">
        GROUP_ID,
      </if>
      <if test="levels != null">
        LEVELS,
      </if>
      <if test="questionTitle != null">
        QUESTION_TITLE,
      </if>
      <if test="questionType != null">
        QUESTION_TYPE,
      </if>
      <if test="questionImgPath != null">
        QUESTION_IMG_PATH,
      </if>
      <if test="questionImgName != null">
        QUESTION_IMG_NAME,
      </if>
      <if test="totalScore != null">
        TOTAL_SCORE,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="examinationId != null">
        #{examinationId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="levels != null">
        #{levels,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="questionImgPath != null">
        #{questionImgPath,jdbcType=VARCHAR},
      </if>
      <if test="questionImgName != null">
        #{questionImgName,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="saptacims.model.TbExaminationQuestionExample" resultType="java.lang.Integer">
    select count(*) from TB_EXAMINATION_QUESTION
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update TB_EXAMINATION_QUESTION
    <set>
      <if test="record.examinationQuestionId != null">
        EXAMINATION_QUESTION_ID = #{record.examinationQuestionId,jdbcType=INTEGER},
      </if>
      <if test="record.questionId != null">
        QUESTION_ID = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.examinationId != null">
        EXAMINATION_ID = #{record.examinationId,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        CATEGORY_ID = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.levels != null">
        LEVELS = #{record.levels,jdbcType=INTEGER},
      </if>
      <if test="record.questionTitle != null">
        QUESTION_TITLE = #{record.questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.questionType != null">
        QUESTION_TYPE = #{record.questionType,jdbcType=INTEGER},
      </if>
      <if test="record.questionImgPath != null">
        QUESTION_IMG_PATH = #{record.questionImgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.questionImgName != null">
        QUESTION_IMG_NAME = #{record.questionImgName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore != null">
        TOTAL_SCORE = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update TB_EXAMINATION_QUESTION
    set EXAMINATION_QUESTION_ID = #{record.examinationQuestionId,jdbcType=INTEGER},
      QUESTION_ID = #{record.questionId,jdbcType=INTEGER},
      EXAMINATION_ID = #{record.examinationId,jdbcType=INTEGER},
      CATEGORY_ID = #{record.categoryId,jdbcType=INTEGER},
      GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      LEVELS = #{record.levels,jdbcType=INTEGER},
      QUESTION_TITLE = #{record.questionTitle,jdbcType=VARCHAR},
      QUESTION_TYPE = #{record.questionType,jdbcType=INTEGER},
      QUESTION_IMG_PATH = #{record.questionImgPath,jdbcType=VARCHAR},
      QUESTION_IMG_NAME = #{record.questionImgName,jdbcType=VARCHAR},
      TOTAL_SCORE = #{record.totalScore,jdbcType=INTEGER},
      CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="saptacims.model.TbExaminationQuestion">
    update TB_EXAMINATION_QUESTION
    <set>
      <if test="questionId != null">
        QUESTION_ID = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="examinationId != null">
        EXAMINATION_ID = #{examinationId,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        CATEGORY_ID = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        GROUP_ID = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="levels != null">
        LEVELS = #{levels,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null">
        QUESTION_TITLE = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        QUESTION_TYPE = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="questionImgPath != null">
        QUESTION_IMG_PATH = #{questionImgPath,jdbcType=VARCHAR},
      </if>
      <if test="questionImgName != null">
        QUESTION_IMG_NAME = #{questionImgName,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        TOTAL_SCORE = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where EXAMINATION_QUESTION_ID = #{examinationQuestionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="saptacims.model.TbExaminationQuestion">
    update TB_EXAMINATION_QUESTION
    set QUESTION_ID = #{questionId,jdbcType=INTEGER},
      EXAMINATION_ID = #{examinationId,jdbcType=INTEGER},
      CATEGORY_ID = #{categoryId,jdbcType=INTEGER},
      GROUP_ID = #{groupId,jdbcType=INTEGER},
      LEVELS = #{levels,jdbcType=INTEGER},
      QUESTION_TITLE = #{questionTitle,jdbcType=VARCHAR},
      QUESTION_TYPE = #{questionType,jdbcType=INTEGER},
      QUESTION_IMG_PATH = #{questionImgPath,jdbcType=VARCHAR},
      QUESTION_IMG_NAME = #{questionImgName,jdbcType=VARCHAR},
      TOTAL_SCORE = #{totalScore,jdbcType=INTEGER},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where EXAMINATION_QUESTION_ID = #{examinationQuestionId,jdbcType=INTEGER}
  </update>
    
  <select id="selectByExaminationId" resultMap="BaseResultMap">
  	select 
  		 <include refid="Base_Column_List" />
  	from TB_EXAMINATION_QUESTION
  	where examination_id = #{examinationId}
  	order by QUESTION_TYPE desc
  </select>
  <select id="getAllQuestionIdByExaminationId" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from TB_EXAMINATION_QUESTION where EXAMINATION_ID=#{examinationId} order by QUESTION_TYPE desc
  </select>
    <select id="selectByPaperId" resultMap="BaseResultMap">
  	select q.* from tb_paper p
	left join tb_examination_question q on p.EXAMINATION_ID = q.EXAMINATION_ID
	where PAPER_ID =#{paperId}
	order by QUESTION_TYPE desc
  </select>
   <select id="getQuestionList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from TB_EXAMINATION_QUESTION
    where EXAMINATION_ID = #{examinationId,jdbcType=INTEGER}
  </select>
   <delete id="delteByExaminationId" parameterType="java.lang.Integer">
    delete from TB_EXAMINATION_QUESTION
    where EXAMINATION_ID = #{examinationId,jdbcType=INTEGER}
  </delete>
</mapper>