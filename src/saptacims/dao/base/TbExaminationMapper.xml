<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="saptacims.dao.base.TbExaminationMapper">
  <resultMap id="BaseResultMap" type="saptacims.model.TbExamination">
    <id column="EXAMINATION_ID" jdbcType="INTEGER" property="examinationId" />
    <result column="EXAMINATION_NAME" jdbcType="VARCHAR" property="examinationName" />
    <result column="EXAMINATION_REMARK" jdbcType="VARCHAR" property="examinationRemark" />
    <result column="EXAMINATION_STATUS" jdbcType="INTEGER" property="examinationStatus" />
    <result column="TOTAL_SCORE" jdbcType="INTEGER" property="totalScore" />
    <result column="CREATE_USER" jdbcType="INTEGER" property="createUser" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_USER" jdbcType="INTEGER" property="updateUser" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="choosePaperVo" type="saptacims.vo.base.TbExaminationVo">
		<id column="EXAMINATION_ID" jdbcType="INTEGER" property="examinationId" />
		<result column="EXAMINATION_NAME" jdbcType="VARCHAR" property="examinationName" />
		<result column="EXAMINATION_REMARK" jdbcType="VARCHAR" property="examinationRemark" />
    	<result column="TOTAL_SCORE" jdbcType="INTEGER" property="totalScore" />
		<result column="CREATE_USER" jdbcType="INTEGER" property="createUser" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="UPDATE_USER" jdbcType="INTEGER" property="updateUser" />
		<result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="USER_CNAME" jdbcType="VARCHAR" property="createUserCname" />
	</resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EXAMINATION_ID, EXAMINATION_NAME, EXAMINATION_REMARK, EXAMINATION_STATUS, TOTAL_SCORE, 
    CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="saptacims.model.TbExaminationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_examination
    where EXAMINATION_ID = #{examinationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_examination
    where EXAMINATION_ID = #{examinationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="saptacims.model.TbExaminationExample">
    delete from tb_examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="saptacims.model.TbExamination">
    insert into tb_examination (EXAMINATION_ID, EXAMINATION_NAME, EXAMINATION_REMARK, 
      EXAMINATION_STATUS, TOTAL_SCORE, CREATE_USER, 
      CREATE_TIME, UPDATE_USER, UPDATE_TIME
      )
    values (#{examinationId,jdbcType=INTEGER}, #{examinationName,jdbcType=VARCHAR}, #{examinationRemark,jdbcType=VARCHAR}, 
      #{examinationStatus,jdbcType=INTEGER}, #{totalScore,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="saptacims.model.TbExamination" keyColumn="EXAMINATION_ID" useGeneratedKeys="true" keyProperty="examinationId">
    insert into tb_examination
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examinationName != null">
        EXAMINATION_NAME,
      </if>
      <if test="examinationRemark != null">
        EXAMINATION_REMARK,
      </if>
      <if test="examinationStatus != null">
        EXAMINATION_STATUS,
      </if>
      <if test="totalScore != null">
        TOTAL_SCORE,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examinationName != null">
        #{examinationName,jdbcType=VARCHAR},
      </if>
      <if test="examinationRemark != null">
        #{examinationRemark,jdbcType=VARCHAR},
      </if>
      <if test="examinationStatus != null">
        #{examinationStatus,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="saptacims.model.TbExaminationExample" resultType="java.lang.Integer">
    select count(*) from tb_examination
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_examination
    <set>
      <if test="record.examinationId != null">
        EXAMINATION_ID = #{record.examinationId,jdbcType=INTEGER},
      </if>
      <if test="record.examinationName != null">
        EXAMINATION_NAME = #{record.examinationName,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationRemark != null">
        EXAMINATION_REMARK = #{record.examinationRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationStatus != null">
        EXAMINATION_STATUS = #{record.examinationStatus,jdbcType=INTEGER},
      </if>
      <if test="record.totalScore != null">
        TOTAL_SCORE = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_examination
    set EXAMINATION_ID = #{record.examinationId,jdbcType=INTEGER},
      EXAMINATION_NAME = #{record.examinationName,jdbcType=VARCHAR},
      EXAMINATION_REMARK = #{record.examinationRemark,jdbcType=VARCHAR},
      EXAMINATION_STATUS = #{record.examinationStatus,jdbcType=INTEGER},
      TOTAL_SCORE = #{record.totalScore,jdbcType=INTEGER},
      CREATE_USER = #{record.createUser,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{record.updateUser,jdbcType=INTEGER},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="saptacims.model.TbExamination">
    update tb_examination
    <set>
      <if test="examinationName != null">
        EXAMINATION_NAME = #{examinationName,jdbcType=VARCHAR},
      </if>
      <if test="examinationRemark != null">
        EXAMINATION_REMARK = #{examinationRemark,jdbcType=VARCHAR},
      </if>
      <if test="examinationStatus != null">
        EXAMINATION_STATUS = #{examinationStatus,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        TOTAL_SCORE = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where EXAMINATION_ID = #{examinationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="saptacims.model.TbExamination">
    update tb_examination
    set EXAMINATION_NAME = #{examinationName,jdbcType=VARCHAR},
      EXAMINATION_REMARK = #{examinationRemark,jdbcType=VARCHAR},
      EXAMINATION_STATUS = #{examinationStatus,jdbcType=INTEGER},
      TOTAL_SCORE = #{totalScore,jdbcType=INTEGER},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where EXAMINATION_ID = #{examinationId,jdbcType=INTEGER}
  </update>
  <select id="selectExaminationByInterviewer" resultMap="choosePaperVo">
		select e.*,user1.USER_CNAME from tb_examination e
		left join tb_examination_interviewer_rl rl on e.EXAMINATION_ID = rl.EXAMINATION_ID
		left join tb_interviewer viewer on viewer.INTERVIEWER_ID = rl.INTERVIEWER_ID
		left join tb_user user1 on user1.USER_ID = e.CREATE_USER
		where viewer.`NAME`=#{name} and viewer.PHONE=#{phone}
		and viewer.active=${@saptacims.cst.Status@ENABLE}	
		order by ${sort} ${order}
		limit ${pageOffset},${pageSize}
	</select>

	<select id="getExaminationByInterviewerCount" resultType="int">
		select count(1) from tb_examination e
		left join tb_examination_interviewer_rl rl on e.EXAMINATION_ID =
		rl.EXAMINATION_ID
		left join tb_interviewer viewer on viewer.INTERVIEWER_ID =
		rl.INTERVIEWER_ID
		where viewer.`NAME`=#{name} and viewer.PHONE=#{phone} and viewer.active=${@saptacims.cst.Status@ENABLE}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_examination
	</select>

	<select id="getPageList" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
		from tb_examination where 1=1
		<if test="examinationName != null and examinationName != ''"> and EXAMINATION_NAME like '%${examinationName}%' </if>
		<if test="examinationStatus != null"> and EXAMINATION_STATUS = '${examinationStatus}' </if>
		<if test="createUser != null "> and CREATE_USER = '${createUser}' </if>
		order by ${sort} ${order}
		limit ${pageOffset},${pageSize}
	</select>
	<select id="getCount" resultType="int">
		select
			count(1)
		from tb_examination where 1=1
		<if test="examinationName != null and examinationName != ''"> and EXAMINATION_NAME like '%${examinationName}%' </if>
		<if test="examinationStatus != null"> and EXAMINATION_STATUS = '${examinationStatus}' </if>
		<if test="createUser != null"> and CREATE_USER = '${createUser}' </if>
	</select>
  	<update id="batchUpdateStatus" parameterType="map" >
    	update tb_examination
    	set  EXAMINATION_STATUS = #{status,jdbcType=INTEGER}
    	where EXAMINATION_ID in
        <foreach item="examinationId" collection="examinationIds" open="(" separator="," close=")">
            #{examinationId}
        </foreach>
  </update>
  	
</mapper>