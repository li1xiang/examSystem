<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"  
	xsi:schemaLocation="  
           http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
           http://www.springframework.org/schema/aop  
           http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
            
	<!-- 引入jdbc配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/resoureces/properties/*.properties</value>
				<!--要是有多个配置文件，只需在这里继续添加即可 -->
			</list>
		</property>
	</bean>
	
	          
	

	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 使用properties来配置 -->
		<property name="driverClassName">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
	</bean>

	<!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
		<property name="basePackage" value="saptacims.dao" />
	</bean>

	<!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mapperLocations" value="classpath:mapper/**/*Mapper.xml"/> -->
		<property name="configLocation" value="classpath:resoureces/mybatis/mybatis-config.xml" />
	</bean>

	<!-- 自动扫描注解的bean -->
	<context:component-scan base-package="saptacims.service" />
    
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    
    
	 <!-- transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
        <qualifier value="local" />  
    </bean>  
    
	  <!--start  -->
	  
	  <!-- end  -->
	  <tx:advice id="txAdvice" transaction-manager="transactionManager">  
	      <tx:attributes>  
	       <!--    <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>   -->
	         <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>   
			 <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>  
			 <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
			 <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			 <tx:method name="scan*" propagation="REQUIRED" rollback-for="Exception"/>
			 <tx:method name="refresh*" propagation="REQUIRED" rollback-for="Exception"/>   
	      </tx:attributes>  
	  </tx:advice>  
	  
	   <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	  
	  <aop:config expose-proxy="true" proxy-target-class="true">  
	      <!-- 只对业务逻辑层实施事务 -->  
	      <aop:pointcut id="txPointcut" expression="execution(public * saptacims.service.*.*(..))"/>  
	      <aop:advisor id="txAdvisor" advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
	  </aop:config>  
	  <!-- 30M 31457280-->
	  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
          <property name="maxUploadSize"><value>31457280</value></property> 
          <property name="defaultEncoding"><value>UTF-8</value></property> 
      </bean> 
      
</beans>
